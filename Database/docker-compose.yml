
# Docker is a powerful development platform that enables users to containerize software. These containers can be run on any machine, as well as in a public or private cloud.

version: '3'
#docker-compose -f ./docker-compose.yml up or docker-compose up
name: db-engine-docker
services:
  # redis
  # docker exec -it redis-local bash
  # redis-cli --version
  # redis-cli
  #127.0.0.1:6379> get home
  #127.0.0.1:6379> set home helloWorld
  
  # docker run --name redis-local -p 6379:6379 -d redis
  
  cache:
    image: redis:6.2-alpine
    container_name: redis-local
    restart: always
    ports:
      - '6379:6379'
    # command: redis-server --save 20 1 --loglevel warning --requirepass MTIzNA==
    volumes: 
      - cache:/data
    networks:
      - bridge
  
  # MongoDB is a NoSQL database service with seamless performance and options for scaling. It uses a JSON-like storage model and doesnâ€™t require a predefined database schema. 
  # docker run -d -p 27017:27017 --name mongo-local -e MONGO_INITDB_ROOT_USERNAME=postgres -e MONGO_INITDB_ROOT_PASSWORD=1234 mongo:latest
  mongo:
    image: mongo
    container_name: mongo-local
    ports:
      - '27017:27017'
    restart: always
    logging:
      options:
        max-size: 1g
    environment:
      - MONGO_INITDB_ROOT_USERNAME=postgres
      - MONGO_INITDB_ROOT_PASSWORD=1234
      - MONGO_INITDB_DATABASE=test
    networks:
      - bridge
 
        
  # docker run --name postgres-local -e POSTGRES_PASSWORD=1234 -p 15432:5432 -d postgres
  postgres:
    image: postgres
    container_name: postgres-local
    ports:
      - 15432:5432
    restart: always
    volumes:
      # - ./backup:/var/lib/postgresql/data
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: 1234
      POSTGRES_DB: postgres
    networks:
      - bridge
      
  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    ports:
      - 9187:9187
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:1234@host.docker.internal:15432/postgres?sslmode=disable"
    # links:
      # - postgres
      # - prometheus
    networks:
      - bridge
      
volumes:
  cache:
    driver: local
  data01:
    driver: local
networks:
  bridge:
    driver: bridge