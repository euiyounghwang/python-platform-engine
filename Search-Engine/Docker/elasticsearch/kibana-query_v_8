

# register snapshot
PUT /_snapshot/my_backup
{
  "type": "fs",
  "settings": {
    "compress": true,
    "location": "/usr/share/elasticsearch/backup"
  }
}

GET /_snapshot/my_backup

PUT test_index-20240201/_doc/3
{
  "tags": [
    "opster",
    "elasticsearch"
  ],
  "date": "01-01-2020"
}


DELETE test_index1

GET _cat/indices

# take a snapshot
PUT /_snapshot/my_backup/backup_20240209?wait_for_completion=true
{
  "indices": "test_index1",
  "ignore_unavailable": true,
  "include_global_state": true
}

DELETE _snapshot/my_backup/test_index-20240210

GET /_snapshot/my_backup/backup_20240209
GET /_snapshot/my_backup/backup_20240209/_status

GET test_index1/_search
{
  "query": {
    "match_all": {}
  }
}

POST test_index1/_close
POST test_index1/_open


GET _snapshot/my_backup/_all

DELETE test_index1_restored

GET _cat/indices

GET test_index1_restored/_search
{
  "query": {
    "match_all": {}
  }
}


POST _snapshot/my_backup/backup_20240209/_restore
{
  "indices": "test_index1",
   "ignore_unavailable": true,
  "include_global_state": false,              
  "rename_pattern": "(.+)",
  "rename_replacement": "$1_restored",
  "include_aliases": false
}


# ---

# test
PUT /_ilm/policy/omnisearch_highlight_policy
{
  "policy": {
    "phases": {
      "hot": {
        "actions": {
          "rollover": {
            "max_size": "5GB",
            "max_docs": 2,
            "max_age": "15d"
          }
        }
      },
      "cold": {
        "min_age": "0m",
        "actions": {}
      },
      "delete": {
        "min_age": "5m",
        "actions": {
          "delete": {
            "delete_searchable_snapshot": true
          }
        }
      }
    }
  }
}

GET _ilm/policy/

GET _template

DELETE omnisearch_highlight_v2-*

DELETE _index_template/rolling

# need to update the alias
PUT _index_template/rolling
{
  "index_patterns": [
    "omnisearch_highlight_v*"
  ],
  "template": {
    "settings": {
      "number_of_shards": 1,
      "number_of_replicas": 0,
      "index.lifecycle.name": "omnisearch_highlight_policy",
      "index.lifecycle.rollover_alias": "rolling-write-index",
      "analysis": {
        "analyzer": {
          "test_analyzer": {
            "filter": [
              "lowercase",
              "stop",
              "snowball"
            ],
            "char_filter": [
              "test_char_filter"
            ],
            "tokenizer": "whitespace"
          }
        },
        "char_filter": {
          "test_char_filter": {
            "type": "mapping",
            "mappings": [
              "+ => _plus_",
              "- => _minus_"
            ]
          }
        }
      }
    },
    "mappings": {
      "properties": {
        "my_keyword_field": {
          "type": "keyword"
        }
      }
    }
  }
}


# different index
PUT _bulk
{"index":{"_index":"test_set"}}
{"my_keyword_field": "man"}



GET omnisearch_highlight_v2-000001
GET omnisearch_highlight_v2-000001/_ilm/explain


GET omnisearch_highlight_v2-*/_search
{
  "track_total_hits": true, 
  "query": {
    "match_all": {}
  },
  "size": 200
}

GET _cat/aliases


# ilm alias
POST _aliases
{
  "actions": [
    {
      "add": {
        "index": "omnisearch_highlight_v2-000001",
        "alias": "rolling-write-index"
      }
    }
  ]
}


PUT _bulk
{"index":{"_index":"rolling-write-index"}}
{"my_keyword_field": "man"}


POST _aliases
{
  "actions": [
    {
      "add": {
        "index": "omnisearch_highlight_v2-000001",
        "alias": "rolling-write-index",
        "is_write_index" : true
      }
    }
  ]
}

GET omnisearch_highlight_v2-000002
GET omnisearch_highlight_v2-000002/_ilm/explain

GET omnisearch_highlight_v2-000003

GET _cat/indices?v

GET myindex-create-from-curator2/_settings
GET myindex-create-from-curator2/_mapping

# --

GET _cat/indices

# You can use the reindex API to migrate data between Elasticsearch clusters.
POST _reindex?wait_for_completion=false
{
  "conflicts": "proceed",
  "source": {
    "index": "test_set",
    "query": {
      "bool": {
        "must_not": [
          {
            "exists": {
              "field": "query"
            }
          }
        ]
      }
    }
  },
  "dest": {
    "index": "omnisearch_highlight_v2-000001",
    "op_type": "create"
  }
}


# - reindex.remote.whitelist="192.168.68.1:*,host.docker.internal:*,localhost:*"
# The new cluster doesnâ€™t have to start fully-scaled out. As you migrate indices and shift the load to the new cluster, you can add nodes to the new cluster and remove nodes from the old one.Create an index with the appropriate mappings and settings. Set the refresh_interval to -1 and set number_of_replicas to 0 for faster reindexing.
POST _reindex?wait_for_completion=true
{
  "source": {
    "remote": {
      "host": "http://host.docker.internal:9209",
      "username": "elastic",
      "password": "your_password"
    },
    "index": "performance_metrics",
    "query": {
     "match_all": {}
    }
  },
  "dest": {
    "index": "cp99_performance_metrics"
  }
}

GET _cat/indices

GET _tasks?detailed=true&actions=*reindex

GET _tasks/BH_UUNP2RjafE0aNHGi_Hw:216731707



#-----
POST _reindex?wait_for_completion=false
{
  "conflicts": "proceed",
  "source": {
    "index": "omnisearch_v16"
  },
  "dest": {
    "index": "omnisearch_v17",
    "op_type": "create"
  }
}

# Wed Mar 15 2023 11:24:52
GET _tasks?detailed=true&actions=*reindex

GET _tasks/BH_UUNP2RjafE0aNHGi_Hw:216731707
POST _tasks/BH_UUNP2RjafE0aNHGi_Hw:216731707/_cancel

#-----

# aggs
GET omnisearch_v16,omnisearch_v17/_search
{
  "size": 0,
  "track_total_hits": true,
  "aggs": {
    "entity_type_aggs": {
      "terms": {
        "field": "global_headers.entity_type",
        "size": 200
      },
      "aggs": {
        "id": {
          "terms": {
            "field": "_id",
            "size": 200
          }
        }
      }
    }
  }
}

#-----

DELETE my_index

PUT my_index
{
  "mappings": {
      "properties": {
        "acl_join_field": { 
          "type": "join",
          "relations": {
            "parent": "child" 
          }
        }
    }
  }
}


# parent index
PUT _bulk
{"index":{"_index":"my_index","_id":"1"}}
{"text":"This is a question","acl_join_field":{"name":"parent"}}


# child index
PUT _bulk?routing=1&refresh
{"index":{"_index":"my_index","_id":"3"}}
{"text":"This is a child","authz":["1","2"], "acl_join_field":{"name":"child","parent":"1"}}


GET my_index
GET my_index/_search

GET _cat/indices

GET my_index/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "has_child": {
            "type": "child",
            "query": {
              "terms": {
                "authz": [
                  "1",
                  "100"
                ]
              }
            }
          }
        }
      ]
    }
  }
}

GET _cat/indices



GET cp_monitoring-es-7-2024.02.15monitoring-es-7-2024.02.15/_search

POST search_indexing-db/_search
{
  "track_total_hits": true,
  "query": {
    "match_all": {}
  }
}

GET cp_recommendation_test/_settings

PUT cp_recommendation_test/_settings
{
  "index" : {
    "number_of_replicas" : 1
  }
}


#--- index, create, update, delete
POST _bulk
{ "index": { "_index": "my-index-b", "_id" : "1"} }
{ "field1": "value1" }


POST my-index-b/_search
{
  "query": {
    "match_all": {}
  }
}

POST _bulk
{ "update": { "_index": "my-index-b", "_id": "1" } }
{ "doc": { "field1": "value1" }, "doc_as_upsert": true }
#--- upsert, doc_as_upsert, script, params

#--
DELETE logs-debug
PUT logs-debug
{
  "mappings": {
    "properties": {
      "@timestamp": {
        "type": "date"
      },
      "message": {
        "type": "text"
      },
      "level": {
        "type": "constant_keyword",
        "value": "debug"
      }
    }
  }
}

POST logs-debug/_doc
{
  "date": "2019-12-12",
  "message": "Starting up Elasticsearch",
  "type": "log",
  "level": "debug"
}

POST logs-debug/_doc
{
  "date": "2019-12-12",
  "type": "log1",
  "message": "Starting up Elasticsearch"
}

POST logs-debug/_search
{
  "query": {
    "match_all": {}
  }
}

POST logs-debug/_update_by_query
{
  "script": {
    "source": "ctx._source['update'] = 'test'"
  },
  "query": {
    "term": {
      "type.keyword": "log1"
    }
  }
}


# --
POST my_index/_bulk
{"index":{"_id":1}}
{"message":"The quick brown fox"}
{"index":{"_id":2}}
{"message":"The quick brown fox jumps over the lazy dog"}
{"index":{"_id":3}}
{"message":"The quick brown fox jumps over the quick dog"}
{"index":{"_id":4}}
{"message":"Brown fox brown dog"}
{"index":{"_id":5}}
{"message":"Lazy jumping dog"}


GET my_index/_search
{
  "query": {
    "match": {
      "message": {
        "query": "quick dog",
        "operator": "and"
      }
    }
  },
  "highlight": {
    "require_field_match": true,
    "order": "score",
    "pre_tags": [
      "<b>"
    ],
    "post_tags": [
      "</b>"
    ],
    "fields": {
      "*": {
        "number_of_fragments": 1,
        "type": "plain",
        "fragment_size": 150
      }
    }
  }
}

GET my_index/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "match": {
            "message": "fox"
          }
        },
        {
          "match_phrase": {
            "message": {
              "query": "lazy dog",
              "slop": 1
            }
          }
        }
      ]
    }
  }
}

GET my_index/_search
{
  "query": {
    "match_phrase": {
      "message": {
        "query": "lazy dog",
        "slop": 1
      }
    }
  }
}


# --
POST phones/_bulk
{"index":{"_id":1}}
{"model":"Samsung GalaxyS 5","price":475,"date":"2014-02-24"}
{"index":{"_id":2}}
{"model":"Samsung GalaxyS 6","price":795,"date":"2015-03-15"}
{"index":{"_id":3}}
{"model":"Samsung GalaxyS 7","price":859,"date":"2016-02-21"}
{"index":{"_id":4}}
{"model":"Samsung GalaxyS 8","price":959,"date":"2017-03-29"}
{"index":{"_id":5}}
{"model":"Samsung GalaxyS 9","price":1059,"date":"2018-02-25"}

GET phones/_search
{
  "query": {
    "range": {
      "price": {
        "gte": 700,
        "lt": 900
      }
    }
  }
}

GET phones/_search
{
  "query": {
    "range": {
      "date": {
        "gt": "31-12/2015",
        "lt": "2018",
        "format": "dd-MM/yyyy||yyyy"
      }
    }
  }
}

GET phones/_search
{
  "query": {
    "range": {
      "date": {
        "gt": "2016-01-01||+6M",
        "lt": "now-365d"
      }
    }
  }
}

GET phones/_search
{
  "query": {
    "bool": {
      "must": [
        {
          "range": {
            "date": {
              "gte": "31/12/2015",
              "lte": "2018",
              "format": "dd/MM/yyyy||yyyy"
            }
          }
        }
      ]
    }
  }
}


#--
GET _analyze
{
  "text": "The quick brown fox jumps over the lazy dog",
  "tokenizer": "whitespace",
  "filter": [
    "lowercase",
    "stop",
    "snowball"
  ]
}

# same result with lowercase, stop token filter
GET _analyze
{
  "text": "The quick brown fox jumps over the lazy dog",
  "analyzer": "snowball"
}

GET my_index2

PUT my_index2
{
  "mappings": {
    "properties": {
      "message": {
        "type": "text",
        "analyzer": "snowball"
      }
    }
  }
}

PUT my_index2/_doc/1
{
  "message": "The quick brown fox jumps over the lazy dog"
}



# Result Cnt : 1
GET my_index2/_search
{
  "query": {
    "match": {
      "message": "jumping"
    }
  }
}

# Result Cnt : 0
GET my_index2/_search
{
  "query": {
    "term": {
      "message": "jumps"
    }
  }
}

# Result Cnt : 1
GET my_index2/_search
{
  "query": {
    "term": {
      "message": "jump"
    }
  }
}

# Cheeck termvectors
GET my_index2/_termvectors/1?fields=message



DELETE my_index3

PUT my_index3
{
  "settings": {
    "index": {
      "analysis": {
        "analyzer": {
          "my_custom_analyzer": {
            "type": "custom",
            "tokenizer": "whitespace",
            "filter": [
              "lowercase",
              "my_stop_filter",
              "snowball"
            ]
          }
        },
        "filter": {
          "my_stop_filter": {
            "type": "stop",
            "stopwords": [
              "brown"
            ]
          }
        }
      }
    }
  }
}

GET my_index3/_analyze
{
  "analyzer": "my_custom_analyzer",
  "text": [
    "The quick brown fox jumps over the lazy dog"
  ]
}




